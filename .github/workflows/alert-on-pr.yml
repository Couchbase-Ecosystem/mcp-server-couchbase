name: Alert on PR Changes

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  alert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install PyYAML and requests
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml requests

      - name: Parse context from yaml/couchbase.yaml and send Slack alert
    env:
      SLACK_WEBHOOK: ${{ secrets.DA_SLACK_WEBHOOK_URL }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    run: |
      import requests, os
      repo = os.environ.get('GITHUB_REPOSITORY')
      # Try to get PR number from GITHUB_REF (refs/pull/123/merge or refs/pull/123/head)
      ref = os.environ.get('GITHUB_REF', '')
      pr_number = ''
      if ref.startswith('refs/pull/'):
        pr_number = ref.split('/')[2]
      else:
        # fallback: try GITHUB_EVENT_PATH
        import json
        event_path = os.environ.get('GITHUB_EVENT_PATH')
        if event_path and os.path.exists(event_path):
          with open(event_path) as f:
            event = json.load(f)
            pr_number = str(event.get('number', ''))
      token = os.environ.get('GITHUB_TOKEN')
      api_url = f"https://api.github.com/repos/{repo}/pulls/{pr_number}"
      headers = {'Authorization': f'token {token}', 'Accept': 'application/vnd.github.v3+json'}
      pr_resp = requests.get(api_url, headers=headers)
      branch_name = os.environ.get('GITHUB_HEAD_REF', '')
      if pr_resp.status_code == 200:
        pr_data = pr_resp.json()
        pr_title = pr_data.get('title', '')
        pr_body = pr_data.get('body', '')
        pr_user = pr_data.get('user', {}).get('login', '')
        pr_url = pr_data.get('html_url', '')
        message = f"PR Alert!\nTitle: {pr_title}\nBranch: {branch_name}\nAuthor: {pr_user}\nURL: {pr_url}\nDescription: {pr_body}"
      else:
        message = f"PR Alert!\nUnable to fetch PR details.\nAPI URL: {api_url}\nStatus: {pr_resp.status_code}\nResponse: {pr_resp.text}"
      webhook = os.environ['SLACK_WEBHOOK']
      requests.post(webhook, json={"text": message})
    shell: python
